@model NewsManagement.ViewModels.Common.PagedResultBase
@{
    //pageIndex=?&keyword=?
    var urlTemplate = Url.Action() + "?pageIndex={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "pageIndex")
        {
            continue;
        }
        if (request.Query[key].Count > 1)
        {
            foreach (var item in (string[])request.Query[key])
            {
                urlTemplate += "&" + key + "=" + item;
            }
        }
        else
        {
            urlTemplate += "&" + key + "=" + request.Query[key];
        }
    }

    var startIndex = Math.Max(Model.PageIndex - 5, 1);
    var finishIndex = Math.Min(Model.PageIndex + 5, Model.PageCount);
}
<div class="dataTable-wrapper dataTable-loading no-footer sortable searchable fixed-columns">
    <div class="dataTable-bottom">
        @if (Model.PageCount > 1)
{
	<nav class="dataTable-pagination">
	<ul class="dataTable-pagination-list">
		@if (Model.PageIndex != startIndex)
		{
			<li class="pager">
				<a title="1" href="@urlTemplate.Replace("{0}", "1")">‹‹</a>
			</li>
			<li class="pager">
				<a href="@urlTemplate.Replace("{0}", (Model.PageIndex-1).ToString())">‹</a>
			</li>
		}
		@for (var i = startIndex; i <= finishIndex; i++)
		{
			if (i == Model.PageIndex)
			{
				<li class="active">
					<a href="#">@i <span class="sr-only">(current)</span></a>
				</li>
			}
			else
			{
				<li class=""><a class="page-link" title="Trang @i.ToString()" href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>
			}
		}
		@if (Model.PageIndex != finishIndex)
		{
			<li class="page">
				<a title="@Model.PageCount.ToString()" href="@urlTemplate.Replace("{0}", (Model.PageIndex+1).ToString())">›</a>
			</li>
			<li class="page">
				<a  href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">››</a>
			</li>
		}
	</ul>
	</nav>
}
    </div>
</div>
